{"ast":null,"code":"export const handleLogin = (username, password) => {\n  if (!username.trim() || !password.trim()) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: 'Username or password cannot be empty!'\n    });\n  } else if (password.length < 8) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: 'Password must have at least 8 characters!'\n    });\n  } else if (!/\\d/.test(password)) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: 'Password must contain at least one number!'\n    });\n  } else if (/[A-Z]/.test(password)) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: 'Password cannot contain uppercase letters!'\n    });\n  } else {\n    setLoggedIn(true);\n    Swal.fire({\n      icon: 'success',\n      title: 'Success!',\n      text: 'Successfully logged in'\n    });\n  }\n  return username.trim() !== '' && password.trim() !== '';\n};","map":{"version":3,"names":["handleLogin","username","password","trim","Swal","fire","icon","title","text","length","test","setLoggedIn"],"sources":["C:/Users/Veljko/reactKurs/react-course-app/src/services/auth.js"],"sourcesContent":["\r\nexport const handleLogin = (username, password) => {\r\n\r\n    \r\n        if (!username.trim() || !password.trim()) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Username or password cannot be empty!',\r\n          });\r\n        } else if (password.length < 8) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Password must have at least 8 characters!',\r\n          });\r\n        } else if (!/\\d/.test(password)) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Password must contain at least one number!',\r\n          });\r\n        } else if (/[A-Z]/.test(password)) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Password cannot contain uppercase letters!',\r\n          });\r\n        } else {\r\n          setLoggedIn(true);\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Success!',\r\n            text: 'Successfully logged in',\r\n          });\r\n        }\r\n      \r\n    \r\n    return username.trim() !== '' && password.trim() !== '';\r\n  };\r\n  "],"mappings":"AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAG3C,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAE;IACxCC,IAAI,CAACC,IAAI,CAAC;MACRC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIN,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;IAC9BL,IAAI,CAACC,IAAI,CAAC;MACRC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,CAAC,IAAI,CAACE,IAAI,CAACR,QAAQ,CAAC,EAAE;IAC/BE,IAAI,CAACC,IAAI,CAAC;MACRC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,OAAO,CAACE,IAAI,CAACR,QAAQ,CAAC,EAAE;IACjCE,IAAI,CAACC,IAAI,CAAC;MACRC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM;IACLG,WAAW,CAAC,IAAI,CAAC;IACjBP,IAAI,CAACC,IAAI,CAAC;MACRC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EAGJ,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAID,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;AACzD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}