{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Veljko\\\\reactKurs\\\\react-course-app\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport \"../styles/login.scss\";\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { handleLogin } from '../services/auth';\nimport { allowedUsers } from \"../helper/AllowedUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  onLogin\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAdmin, setisAdmin] = useState('');\n  const handleUsernameChange = e => {\n    setUsername(e.target.value.replace(/\\s/g, ''));\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value.replace(/\\s/g, '')); // \n  };\n\n  const handleLoginSubmit = () => {\n    if (!username.trim() || !password.trim()) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Username or password cannot be empty!'\n      });\n    } else if (password.length < 8) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Password must have at least 8 characters!'\n      });\n    } else if (!/\\d/.test(password)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Password must contain at least one number!'\n      });\n    } else if (/[A-Z]/.test(password)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Password cannot contain uppercase letters!'\n      });\n    } else if (!handleLogin(username, password)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Username or password cannot be empty!'\n      });\n    } else {\n      onLogin(username, password);\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Successfully logged in'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blue Grid Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username..\",\n        type: \"text\",\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password..\",\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoginSubmit,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Ddtbaz9szPXPeVbJR7Ce4AGVEoo=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Swal","handleLogin","allowedUsers","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","isAdmin","setisAdmin","handleUsernameChange","e","target","value","replace","handlePasswordChange","handleLoginSubmit","trim","fire","icon","title","text","length","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Veljko/reactKurs/react-course-app/src/pages/Login.js"],"sourcesContent":["import \"../styles/login.scss\"\r\nimport React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { handleLogin } from '../services/auth';\r\nimport { allowedUsers } from \"../helper/AllowedUsers\";\r\n\r\n\r\nexport default function Login({ onLogin }) {\r\n  \r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isAdmin, setisAdmin] = useState('')\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value.replace(/\\s/g, '')); \r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value.replace(/\\s/g, '')); // \r\n  };\r\n\r\n  const handleLoginSubmit = () => {\r\n    if (!username.trim() || !password.trim()) {\r\n        Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'Username or password cannot be empty!',\r\n        });\r\n  } else if (password.length < 8) {\r\n        Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'Password must have at least 8 characters!',\r\n        });\r\n  } else if (!/\\d/.test(password)) {\r\n        Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'Password must contain at least one number!',\r\n        });\r\n  } else if (/[A-Z]/.test(password)) {\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Error',\r\n      text: 'Password cannot contain uppercase letters!',\r\n    });\r\n  } else if (!handleLogin(username, password)) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'Username or password cannot be empty!',\r\n      });\r\n    } else {\r\n      \r\n      onLogin(username, password);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success!',\r\n        text: 'Successfully logged in',\r\n      });\r\n      \r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Blue Grid Login</h2>\r\n      <div className=\"form-group\">\r\n        <label>Username:</label>\r\n        <input\r\n          placeholder=\"Username..\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={handleUsernameChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Password:</label>\r\n        <input\r\n          placeholder=\"Password..\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n      </div>\r\n      <button onClick={handleLoginSubmit}>Login</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,sBAAsB;AAC7B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAEzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,oBAAoB,GAAIC,CAAC,IAAK;IAClCN,WAAW,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,oBAAoB,GAAIJ,CAAC,IAAK;IAClCJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAAC,CAAC,IAAI,CAACX,QAAQ,CAACW,IAAI,CAAC,CAAC,EAAE;MACtCrB,IAAI,CAACsB,IAAI,CAAC;QACVC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACN,CAAC,CAAC;IACR,CAAC,MAAM,IAAIf,QAAQ,CAACgB,MAAM,GAAG,CAAC,EAAE;MAC1B1B,IAAI,CAACsB,IAAI,CAAC;QACVC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACN,CAAC,CAAC;IACR,CAAC,MAAM,IAAI,CAAC,IAAI,CAACE,IAAI,CAACjB,QAAQ,CAAC,EAAE;MAC3BV,IAAI,CAACsB,IAAI,CAAC;QACVC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACN,CAAC,CAAC;IACR,CAAC,MAAM,IAAI,OAAO,CAACE,IAAI,CAACjB,QAAQ,CAAC,EAAE;MACjCV,IAAI,CAACsB,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACxB,WAAW,CAACO,QAAQ,EAAEE,QAAQ,CAAC,EAAE;MACzCV,IAAI,CAACsB,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,MAAM;MAELnB,OAAO,CAACE,QAAQ,EAAEE,QAAQ,CAAC;MAC3BV,IAAI,CAACsB,IAAI,CAAC;QACRC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;IAGJ;EACF,CAAC;EAED,oBACErB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBzB,OAAA;QAAAyB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB7B,OAAA;QACE8B,WAAW,EAAC,YAAY;QACxBC,IAAI,EAAC,MAAM;QACXlB,KAAK,EAAET,QAAS;QAChB4B,QAAQ,EAAEtB;MAAqB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBzB,OAAA;QAAAyB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB7B,OAAA;QACE8B,WAAW,EAAC,YAAY;QACxBC,IAAI,EAAC,UAAU;QACflB,KAAK,EAAEP,QAAS;QAChB0B,QAAQ,EAAEjB;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MAAQiC,OAAO,EAAEjB,iBAAkB;MAAAS,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAAC1B,EAAA,CAlFuBF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}